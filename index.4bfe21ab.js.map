{"mappings":"AAAA,IAAMA,QAAUC,SAASC,cAAc,QACjCC,OAASF,SAASC,cAAc,iBAChCE,KAAOH,SAASC,cAAc,UAE9BG,iBAAmB,SAAAC,GACvB,IAAMC,EAAO,qGAEIC,OAALF,EAAK,yEAKjBF,KAAKK,WAAaF,C,EAGdG,YAAc,SAAAC,GAElBC,MAAMC,KAAKT,KAAKU,UACbC,QAAO,SAAAT,G,OAASA,EAAKU,YAAYC,cAAcC,SAASP,E,IACxDQ,SAAQ,SAAAb,G,OAAQA,EAAKc,UAAUC,IAAI,W,IAGtCT,MAAMC,KAAKT,KAAKU,UACbC,QAAO,SAAAT,G,OAAQA,EAAKU,YAAYC,cAAcC,SAASP,E,IACvDQ,SAAQ,SAAAb,G,OAAQA,EAAKc,UAAUE,OAAO,W,KAI3CtB,QAAQuB,iBAAiB,UAAU,SAAAC,GACjCA,EAAEC,iBAEF,IAAMnB,EAAON,QAAQqB,IAAIK,MAAMC,OAG3BrB,EAAKsB,SACPvB,iBAAiBC,GACjBN,QAAQ6B,Q,IAMZzB,KAAKmB,iBAAiB,SAAS,SAAAC,GAEzBA,EAAEM,OAAOV,UAAUW,SAAS,WAC9BP,EAAEM,OAAOE,cAAcV,Q,IAK3BnB,OAAOoB,iBAAiB,SAAS,WAC/B,IAAMZ,EAAOR,OAAOuB,MAAMC,OAAOV,cACjCP,YAAYC,E","sources":["src/app.js"],"sourcesContent":["const addForm = document.querySelector('.add');\nconst search = document.querySelector('.search input');\nconst list = document.querySelector('.todos');\n\nconst generateTemplate = todo => {\n  const html = `\n    <li class=\"list-group-item d-flex justify-content-between align-items-center\">\n      <span>${todo}</span>\n      <i class=\"far fa-trash-alt delete\"></i>\n    </li>\n  `;\n\n  list.innerHTML += html;\n};\n\nconst filterTodos = term => {\n  //? add filtered class:\n  Array.from(list.children)\n    .filter(todo => !todo.textContent.toLowerCase().includes(term))\n    .forEach(todo => todo.classList.add('filtered'));\n\n  //? remove filtered class:\n  Array.from(list.children)\n    .filter(todo => todo.textContent.toLowerCase().includes(term))\n    .forEach(todo => todo.classList.remove('filtered'));\n};\n\n//TODO add todos:\naddForm.addEventListener('submit', e => {\n  e.preventDefault();\n\n  const todo = addForm.add.value.trim();\n\n  // Nu permitem introducerea campurilor goale. generateTemplate() va fi apelat doar daca am introdus ceva ce are lungimea mai mare dacat 0:\n  if (todo.length) {\n    generateTemplate(todo);\n    addForm.reset(); // Curățăm conținutul câmpului de input\n  }\n});\n\n//TODO delete todos:\n// Adaugam addEventListener pe parintele inregistrarii TODO. Parintele unei inregistrari TODO este intreaga lista de TODO-uri. Astfel, datorita propagarii in sus a evenimentelor (bubbling), click-ul pe orice children, inclusiv pe un nou TODO adaugat, va fi capturat cu ajutorul acestui EventListener:\nlist.addEventListener('click', e => {\n  // Verificăm dacă elementul pe care s-a făcut click conține clasa \"delete\", asociată cu iconița de ștergere (recycleBin). Dacă da, eliminam elementul parinte care, de data aceasta, este intregul element 'li' (inregistrarea TODO curenta):\n  if (e.target.classList.contains('delete')) {\n    e.target.parentElement.remove();\n  }\n});\n\n//TODO filter todos event:\nsearch.addEventListener('keyup', () => {\n  const term = search.value.trim().toLowerCase();\n  filterTodos(term);\n});\n"],"names":["addForm","document","querySelector","search","list","generateTemplate","todo","html","concat","innerHTML","filterTodos","term","Array","from","children","filter","textContent","toLowerCase","includes","forEach","classList","add","remove","addEventListener","e","preventDefault","value","trim","length","reset","target","contains","parentElement"],"version":3,"file":"index.4bfe21ab.js.map"}